@page
@model AsyncAcademy.Pages.PaymentFormModel

@{
    ViewData["Title"] = "PaymentForm";
}

<h1>PaymentForm</h1>







<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Accept a payment</title>
    <meta name="description" content="A demo of a payment on Stripe" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://js.stripe.com/v3/"></script>
    <link rel="stylesheet" href="css/style.css">
    <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">

</head>
<body>
    <!-- Display a payment form -->

    <div class="row">
        <div class="col-md-6">
            <h3 id="pay_amount">@Model.StudentPaymentBalance.ToString("C")</h3>
        </div>
    </div>

    <form id="payment-form">
        <h3>Tuition Due</h3>
        <label for="amount">Amount</label>
        <input type="number" name="amount" placeholder="Enter amount" required>

        <!-- Payment fields (Name, Card Number, etc.) -->


        <!-- Name on Card -->
        <label for="cardholder-name">Name On Card</label>
        <input id="cardholder-name" type="text" placeholder="Cardholder Name" required>


        <!-- Card Element - Stripe injects the card input here -->
        <label for="card-element">Card Number</label>
        <input id="card-element" type="text" placeholder="Card Number" required>

        <!-- CVC -->
        <label for="cvc">CVC:</label>
        <input id="cvc" type="text" maxlength="3" placeholder="CVC" required>

        <!-- Payment Amount -->
        <label for="amount">Payment Amount: $</label>
        <input id="amount" type="number" step="0.01" min="0" placeholder="Enter Amount" required>

        <!-- Payment Description -->
        <label for="description">Payment Description</label>
        <input id="description" type="text" placeholder="Description">


        <!-- Submit Button -->
        <button id="submit-button" type="submit" onclick="submitPayment()">Submit Payment</button>


        <!-- Error Display -->
        <div id="card-errors" role="alert"></div>


    </form>


    <div id="checkout">
        <!-- Checkout will insert the payment form here -->
    </div>



</body>
</html>

<style>
    body {
        background-color: #dcdedc;
        font-family: 'Ubuntu', sans-serif;
    }
</style>



<script>

    const submitPayment = () => {

        event.preventDefault();

        // Retrieve user input values from the form
        const amount = document.getElementsByName('amount')[0].value;
        const cardholderName = document.('cardholder-name').value;
        const cardNumber = document.getElementById('card-element').value;
        const cvc = document.getElementById('cvc').value;
        const description = document.getElementById('description').value;


        fetch('/create-checkout-session', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                amount,  // User-entered amount
                cardholderName: cardholderName,  // User name on card
                cardNumber: cardNumber,  // User's card number
                cvc: cvc,  // CVC entered by user
                description: description  // Optional payment description
            })
        }).then(response => {
            return response.json();
        }).then()
    }











    // document.addEventListener("DOMContentLoaded", function () {
    //     // This is your test secret API key.
    //     const stripe = Stripe("pk_test_51Q2OkdLffhLXA6EXWISMXQO7nE1GUAdjKHkH46gVUhacOfXJdvr4BhCnilNcXKKR8eOUwoslw6N0FFse8bZht74H00UvsQFF0a");

    //     initialize();

    //     // Create a Checkout Session
    //     async function initialize(amount) {
    //         const fetchClientSecret = async () => {

    //             console.log("Body: ", document.getElementById('pay_amount').value);

    //             try {
    //                 const response = await fetch("https://localhost:7082/create-checkout-session", {
    //                     method: "POST",
    //                     headers: { 'Content-Type': 'application/json' },  // Ensure correct headers
    //                     body: JSON.stringify({ amount: "500" })  // Convert the amount to JSON
    //                 });

                    
    //                 console.log(response);

    //                 if (!response.ok) {
    //                     // Handle server-side error
    //                     throw new Error(`Server error: ${response.statusText}`);
    //                 }

    //                 const result = await response.json();  // Parse JSON response
    //                 console.log(result.clientSecret);
    //                 return result.clientSecret;  // Return the clientSecret from the server response
    //             } 
    //             catch (error) {
    //                 console.error("Error fetching client secret:", error);  // Log the error for debugging
    //                 return null;  // Return null or handle the error accordingly
    //             }
    //         };


    //         const checkout = await stripe.initEmbeddedCheckout({
    //             fetchClientSecret,
    //         });

    //         // Mount Checkout
    //         checkout.mount('#checkout');
    //     }
    // });

</script>



