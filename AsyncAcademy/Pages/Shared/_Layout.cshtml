@using Microsoft.AspNetCore.Http
@using Microsoft.EntityFrameworkCore
@using AsyncAcademy.Data
@using AsyncAcademy.Models
@inject IHttpContextAccessor HttpContextAccessor
@{
    var bellStyle = ViewData["BellIcon"] as string;
    var bellCount = ViewData["BellNum"] as string;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Async Academy</title>
    <link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index"><img src="/images/logo_sm.png" alt="AsyncAcademy Logo"></a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/welcome">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Profile">Profile</a>
                        </li>
 
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page=@ViewData["NavBarLink"]>@ViewData["NavBarText"]</a>
                        </li>

                        <!-- Conditionally render Account tab -->
                        @if (!string.IsNullOrEmpty(ViewData["NavBarAccountTabLink"]?.ToString()) && !string.IsNullOrEmpty(ViewData["NavBarAccountText"]?.ToString()))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page=@ViewData["NavBarAccountTabLink"]>@ViewData["NavBarAccountText"]</a>
                            </li>
                        }
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Calendar">Calendar</a>
                        </li>
                        <!--
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Charts">Charts</a>
                        </li>
                        -->
                    </ul>

                    <!-- Trigger/Open The Modal -->
                    <div id="notoIcon" class="ml-auto d-flex align-items-center">
                        <i id="notoBtn" class="@bellStyle"></i>&nbsp @bellCount
                    </div>
                    <div id="notoModal" class="modal">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <span class="close">&times;</span>
                            @if (string.IsNullOrEmpty(ViewData["BellNum"]?.ToString()))
                            {
                                <p>No updates - Check back later.</p>
                            }
                            else
                            {
                                @foreach (List<object> noto in @Model.notos)
                                {
                                    @if (noto[5].ToString() == "File Submission")
                                    {
                                        <div class="noto-item">
                                            <a asp-page="/Assignments/SubmitFile" asp-route-id="@noto[4]" class="btn btn-success">@noto[0] - @noto[1] | @noto[2]/@noto[3]</a>
                                        </div>
                                    }
                                    @if (noto[5].ToString() == "textentry" || noto[5].ToString() == "Text Entry" || noto[5].ToString() == "URL")
                                    {
                                        <div class="noto-item">
                                            <a asp-page="/Assignments/Submit" asp-route-id="@noto[4]" class="btn btn-success">@noto[0] - @noto[1] | @noto[2]/@noto[3]</a>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            <!-- Debug output -->
            @RenderBody()
        </main>
    </div>

    <div style="bottom:0;position: fixed; width:100%; text-align:center;">
        <footer class="border-top footer text-muted">
            &copy; 2024 - Async Academy - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </footer>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Notification Modal -->
    <script type="text/javascript">
        // Get the modal
        var modal = document.getElementById("notoModal");

        // Get the button that opens the modal
        var btn = document.getElementById("notoBtn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
