@page
@model AsyncAcademy.Pages.Assignments.SubmitModel
@{
    ViewData["Title"] = "Submit Assignment";
}

<head>
    <link rel="stylesheet" href="css/style.css">
    <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
</head>

<body>

<div class="assignment-container">
<h1>Submit Assignment: @Model.Assignment.Title</h1>
@if (Model.currentGrade == null)
{
    <h3 style="float:right">Grade: - / @Model.Assignment.MaxPoints</h3>

}
@if (Model.currentGrade != null && Model.currentGrade >= 0)
{
    <h3 style="float:right">Grade: @Model.currentGrade / @Model.Assignment.MaxPoints</h3>
}

@if (Model.previousSubmissions.Count >= 1)
{
    <h2 style="color:green">Submitted!</h2>
}

<form method="post">
    @if (Model.Assignment.Type == "Text Entry" || Model.Assignment.Type == "textentry")
    {
        <div class="form-group">
            <label asp-for="Submission.Content"></label>
            @if(Model.inputReadOnly)
            {
                <textarea asp-for="Submission.Content" class="form-control" rows="5" readonly></textarea>
                <span asp-validation-for="Submission.Content" class="text-danger"></span>
                <button type="submit" class="btn btn-primary" hidden>Submit</button>
            }
            else
            {
                <textarea asp-for="Submission.Content" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Submission.Content" class="text-danger"></span>
                <button type="submit" class="btn btn-primary">Submit</button>    
            }
        </div>

        <input type="hidden" asp-for="Assignment.Id" />
        <input type="hidden" asp-for="Assignment.Description" />
        <input type="hidden" asp-for="Assignment.Type" />
        <input type="hidden" asp-for="Assignment.Title" />

    } 
    @if (Model.Assignment.Type == "File Submission")
    {
        <script>window.location.href = './SubmitFile'</script>
    }
</form>

@if (Model.currentGrade != null && Model.currentGrade >= 0)
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        google.charts.setOnLoadCallback(drawMultSeries);

        function drawMultSeries() {
            var data = google.visualization.arrayToDataTable([
                ['Assignment', 'Your score', 'Class Minimum', 'Class Average', 'Class Maximum'],
                ['@Model.Assignment.Title', @Model.currentGrade, @Model.minGrade, @Model.averageGrade, @Model.maxGrade],

            ]);

            var options = {
                title: '@Model.Assignment.Title Grade Analytics',
                chartArea: { width: '50%' },
                hAxis: {
                    title: 'Scores',
                    minValue: 0
                },

            };

            var chart = new google.visualization.BarChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>

    <div id="chart_div"></div>

}
    
<a href="/Assignments?courseId=@Model.Assignment.CourseId">Back to Assignments</a>
</div>
</body>

<style>
    body {
        background-color: #dcdedc;
        font-family: 'Ubuntu', sans-serif;
    }

    .assignment-container {
        border: solid 3px #ccc; /* lighter gray */
        border-radius: 1.5em;
        margin-bottom: 10px;
        padding: 10px;
        background-color: white;
        box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14);
        font-family: 'Ubuntu', sans-serif;
    }
</style>